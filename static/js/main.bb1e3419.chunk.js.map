{"version":3,"sources":["redux/todoslice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["getTodoAsync","createAsyncThunk","a","fetch","response","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","deleteTodoAsync","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","newTodo","Date","now","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","pending","console","log","fulfilled","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","className","type","placeholder","onChange","target","TodoItem","checked","e","onClick","TodoList","useSelector","useEffect","scope","map","TotalCompleteItems","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.bb1e3419.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getTodoAsync = createAsyncThunk(\n  \"todos/getTodosAsync\",\n  async () => {\n    const response = await fetch(\"https://usingreduxtodo.herokuapp.com/todos\");\n    if (response.ok) {\n      const todos = await response.json();\n      return { todos };\n    }\n  }\n);\n\nexport const addTodoAsync = createAsyncThunk(\n  \"todos/addtoasync\",\n  async (payload) => {\n    const response = await fetch(\"https://usingreduxtodo.herokuapp.com/todos\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({ title: payload.title }),\n    });\n    if (response.ok) {\n      const todo = await response.json();\n      return { todo };\n    }\n  }\n);\n\nexport const toggleCompleteAsync = createAsyncThunk(\n  \"todos/completeTodoAsync\",\n  async (payload) => {\n    const response = await fetch(`https://usingreduxtodo.herokuapp.com/todos/${payload.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ completed: payload.completed }),\n    });\n    if (response.ok) {\n      const todo = await response.json();\n      return { id: todo.id, completed: todo.completed };\n    }\n  }\n);\n\n\nexport const deleteTodoAsync = createAsyncThunk(\n\t'todos/deleteTodoAsync',\n\tasync (payload) => {\n\t\tconst resp = await fetch(`https://usingreduxtodo.herokuapp.com/todos/${payload.id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t});\n\n\t\tif (resp.ok) {\n\t\t\treturn { id: payload.id };\n\t\t}\n\t}\n);\n\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [\n    { id: 1, title: \"todo1\", completed: false },\n    { id: 2, title: \"todo2\", completed: false },\n    { id: 3, title: \"todo3\", completed: true },\n  ],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false,\n      };\n      state.push(newTodo);\n    },\n    toggleComplete: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload.id);\n    },\n  },\n  extraReducers: {\n    [getTodoAsync.pending]: (state, action) => {\n      console.log(\"fetching data------\");\n    },\n    [getTodoAsync.fulfilled]: (state, action) => {\n      console.log(\"fetched data------\");\n      return action.payload.todos;\n    },\n    [addTodoAsync.fulfilled]: (state, action) => {\n      state.push(action.payload.todo);\n    },\n    [toggleCompleteAsync.fulfilled]: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    // [toggleCompleteAsync.fulfilled]: (state, action) => {\n\t\t// \tconst index = state.findIndex(\n\t\t// \t\t(todo) => todo.id === action.payload.todo.id\n\t\t// \t);\n\t\t// \tstate[index].completed = action.payload.todo.completed;\n\t\t// },\n    // [deleteTodoAsync.fulfilled]: (state, action) => {\n    //   return state.filter((todo) => todo.id !== action.payload.id);\n    // },\n    [deleteTodoAsync.fulfilled]: (state, action) => {\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\n\t\t},\n  },\n});\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\nexport default todoSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodoAsync } from \"../redux/todoslice\";\n\nconst AddTodoForm = () => {\n  const [value, setValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dispatch(addTodoAsync({ title: value }));\n    console.log(\"user entered: \" + value);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"form-inline mt-3 mb-3\">\n      <label className=\"sr-only\">Name</label>\n      <input\n        type=\"text\"\n        className=\"form-control mb-2 mr-sm-2\"\n        placeholder=\"Add todo...\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      ></input>\n\n      <button type=\"submit\" className=\"btn btn-primary mb-2\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleCompleteAsync, deleteTodoAsync } from \"../redux/todoslice\";\n\nconst TodoItem = ({ id, title, completed }) => {\n  const dispatch = useDispatch();\n\n  const handleCheckboxChange = (e) => {\n    dispatch(\n      toggleCompleteAsync({\n        id: id,\n        completed: !completed,\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    dispatch(\n      deleteTodoAsync({\n        id: id,\n      })\n    );\n  };\n\n  return (\n    <li className={`list-group-item ${completed && \"list-group-item-success\"}`}>\n      <div className=\"d-flex justify-content-between\">\n        <span className=\"d-flex w-25\">\n          <input\n            type=\"checkbox\"\n            className=\"m-3\"\n            checked={completed}\n            onChange={(e) => handleCheckboxChange(e)}\n          ></input>\n        </span>\n        <span className=\"w-50 \">{title}</span>\n        <button className=\"btn btn-danger\" onClick={() => handleDelete()}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useEffect } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTodoAsync } from \"../redux/todoslice\";\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n\n  const todos = useSelector((state) => state.todos);\n\n  useEffect(() => {\n    dispatch(getTodoAsync());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div className=\"bg-light table_bg\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\" className=\" w-25\">\n                {\" \"}\n                Complete Status\n              </th>\n              <th scope=\"col\" className=\"m-auto \">\n                {\" \"}\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                &nbsp;title\n              </th>\n              {/* <th scope=\"col\">Destination </th> */}\n            </tr>\n          </thead>\n        </table>\n      </div>\n      <ul className=\"list-group\">\n        {todos.map((todo) => (\n          <TodoItem\n            id={todo.id}\n            title={todo.title}\n            completed={todo.completed}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst TotalCompleteItems = () => {\n  const todos = useSelector((state) =>\n    state.todos.filter((todo) => todo.completed === true)\n  );\n\n  return <h4 className=\"mt-3\">Total Complete Items: {todos.length}</h4>;\n};\n\nexport default TotalCompleteItems;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList';\nimport TotalCompleteItems from './components/TotalCompleteItems';\n\nconst App = () => {\n\treturn (\n\t\t<div className='container bg-white p-4 mt-5'>\n\t\t\t<h1>My Todo List</h1>\n\t\t\t<AddTodoForm />\n\t\t\t<TodoList />\n\t\t\t<TotalCompleteItems />\n\t\t</div>\n\t);\n};\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todoslice\";\nexport default configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}